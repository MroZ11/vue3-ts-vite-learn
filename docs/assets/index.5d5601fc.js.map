{"version":3,"file":"index.5d5601fc.js","sources":["../../vite/modulepreload-polyfill","../../src/assets/logo.png","../../src/App.vue","../../src/request/request.ts","../../src/request/api/resposity.ts","../../plugin-vue:export-helper","../../src/components/Doc.vue","../../src/request/api/customer.ts","../../src/components/Ui.vue","../../src/components/About.vue","../../src/echarts.ts","../../src/components/Chart.vue","../../src/components/Click.vue","../../src/components/composition/resposity-load.ts","../../src/components/composition/Index.vue","../../src/router.ts","../../src/main.ts"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","export default \"__VITE_ASSET__03d6d6da__\"","<script setup lang=\"ts\">\n// This starter template is using Vue 3 <script setup> SFCs\n// Check out https://v3.vuejs.org/api/sfc-script-setup.html#sfc-script-setup\nimport zhCn from 'element-plus/lib/locale/lang/zh-cn'\n\n\ninterface RouterLink {\n  /**\n   * 标题\n   */\n  title: string\n  /**\n   * 路由地址\n   */\n  to: RouteLocationRaw\n}\n\n</script>\n\n\n<template>\n  <el-config-provider :locale=\"zhCn\">\n    <img alt=\"Vue logo\" src=\"./assets/logo.png\" />\n    <div>\n      <el-tabs v-model=\"activeTab\" @tab-click=\"tabClick\" class=\"navs\" :stretch=\"true\">\n        <el-tab-pane\n          v-for=\"({ title,  },index) in routerLinks\"\n          :key=\"index\"\n          :label=\"title\"\n          :name=\"title\"\n        ></el-tab-pane>\n      </el-tabs>\n      <router-view v-slot=\"{ Component, route }\" @viewIn=\"changeTitle\">\n        <keep-alive>\n          <component :is=\"Component\" :key=\"route.meta.usePathKey ? route.path : undefined\" />\n        </keep-alive>\n      </router-view>\n    </div>\n  </el-config-provider>\n</template>\n\n<script lang=\"ts\">\n\nimport { defineComponent } from 'vue'\nimport { RouteLocationRaw } from \"vue-router\";\n\n\nexport default defineComponent({\n  // 已启用类型推断\n  name: \"APP\",\n  data() {\n    return {\n      activeTab: 'Home',\n      firstLoad: false,\n      routerLinks: [\n        { title: 'Home', to: { path: '/' } },\n        { title: 'About', to: { path: '/about' } },\n        { title: 'Doc', to: { path: '/doc', query: { titleCenter: 'titleCenter' } } },\n        { title: 'Ui', to: { path: '/ui' } },\n        { title: 'Chart', to: { path: '/chart' } },\n        { title: 'Click', to: { path: '/click' } },\n        { title: 'Composition', to: { path: '/composition' } },\n      ] as RouterLink[]\n    }\n  },\n  methods: {\n    tabClick(tab: any, event: any) {\n      const nowIndex: number = tab.index\n      const to = this.routerLinks[nowIndex].to\n      this.$router.replace(to)\n    },\n    changeTitle() {\n      console.log(1111111)\n    }\n  },\n  watch: {\n    $route(to, from) {\n      const toPath = to.path as String\n      if (this.firstLoad == true) {\n        this.firstLoad = false\n\n        //页面刷新后重新选中tab\n\n        if (toPath === '/') {\n          this.activeTab = 'Home'\n        } else {\n          this.activeTab = toPath[1].toUpperCase() + toPath.substring(2)\n        }\n\n\n      }\n    }\n  },\n  mounted() {\n    this.firstLoad = true\n  }\n})\n\n\n\n\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\n.navs {\n  width: 50%;\n  margin-left: 25%;\n}\n\n.w-b50 {\n  width: 50%;\n}\n</style>\n","import axios from \"axios\"\r\nlet url = \"/api\"\r\nconst request = axios.create({\r\n    baseURL: url,\r\n    timeout: 50000\r\n})\r\n\r\nexport function get(url: string, params: Object): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n        request.get(url, { params: params })\r\n            .then(response => {\r\n                return resolve(response)\r\n            })\r\n            .catch(error => {\r\n                return reject(error)\r\n            })\r\n\r\n    })\r\n}\r\n\r\nexport function post(url: string, params: Object): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n        request.post(url, params)\r\n            .then(response => {\r\n                return resolve(response)\r\n            })\r\n            .catch(error => {\r\n                return reject(error)\r\n            })\r\n\r\n    })\r\n}","import { AxiosResponse } from 'axios'\r\nimport {get}  from '../request'\r\n\r\nexport interface Resposity{\r\n    userId:string\r\n    goods:string\r\n    count:number\r\n}\r\n\r\nexport async function getResposity (params:Object): Promise<Resposity[]>{\r\n    return get('/resposity',params).then((response:any)=>{\r\n        return response.data.data\r\n    }).catch(err=>{\r\n        return []\r\n    })\r\n}","\nexport default (sfc, props) => {\n  const target = sfc.__vccOpts || sfc;\n  for (const [key, val] of props) {\n    target[key] = val;\n  }\n  return target;\n}\n","<script setup lang=\"ts\">\n// This starter template is using Vue 3 <script setup> SFCs\n// Check out https://v3.vuejs.org/api/sfc-script-setup.html#sfc-script-setup\nimport { useRoute } from \"vue-router\";\nimport { getResposity } from '../request/api/resposity';\nimport { Resposity } from '../request/api/resposity';\nimport { Ref, ref, watch,defineProps,withDefaults } from 'vue'\n\nconst route = useRoute()\n\n// setup内定义参数\ninterface Props {\n  left?: string\n  labels?: string[]\n}\n// 设置默认值\nconst props = withDefaults(defineProps<Props>(), {\n  left: 'title-left'\n})\n\nconst userId = ref(1)\n\nconst repositories: Ref<Resposity[]> = ref([])\n\nasync function loadData(){\n  const dataList = await getResposity({ userId: userId.value })\n  repositories.value = dataList\n}\n\nloadData()\n\n// 函数\nfunction refresh() {\n  userId.value++\n}\n\n// 监听\nwatch(userId, (now, before) => {\n  console.log(`userId changed now value:${now},before value:${before}`)\n  loadData()\n})\n\n</script>\n\n\n<template>\n  <div class=\"content\">\n    <el-card :header=\"msg\" class=\"box-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <div class=\"card-header--title\">{{left}}</div>\n          <div class=\"card-header--title\">\n            <div>\n            {{msg}}\n            </div>\n            <div>\n              {{'userId :'+ userId}}\n            </div> \n          </div>\n          <el-button class=\"button\" type=\"text\" @click=\"refresh\">refresh</el-button>\n        </div>\n      </template>\n      <div\n        v-for=\"(item,o) in repositories\"\n        :key=\"o\"\n        class=\"text item\"\n      >{{ item.goods + 'count :' + item.count }}</div>\n    </el-card>\n  </div>\n</template>\n\n<script lang=\"ts\">\n\nimport { defineComponent, computed } from 'vue'\n\nexport default defineComponent({\n  // 已启用类型推断\n  name: \"Doc\",\n  computed: {\n    // 需要注解\n    msg(): string {\n      console.log(this.$route)\n      return this.$route.query['titleCenter'] as string;\n    },\n  },\n  data() {\n    return {\n\n    }\n  },\n\n})\n\n\n\n\n\n</script>\n\n<style scoped>\n.content {\n  width: 100%;\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n}\n\n.card-header--title {\n  padding: 12px 0px;\n}\n\n.text {\n  font-size: 14px;\n}\n\n.item {\n  margin-bottom: 18px;\n}\n\n.box-card {\n  width: 480px;\n  text-align: left;\n}\n</style>\n","import { AxiosResponse } from 'axios'\r\nimport {post}  from '../request'\r\n\r\n\r\n/**\r\n * 行数据\r\n */\r\n export interface Customer {\r\n    /**\r\n     * id\r\n     */\r\n    id:string\r\n    /**\r\n     * 日期\r\n     */\r\n    date: string\r\n    /**\r\n     * 姓名\r\n     */\r\n    name: string\r\n    /**\r\n     * 地址\r\n     */\r\n    address: string\r\n  }\r\n  \r\n\r\nexport async function postCustomer (params:Customer): Promise<Customer>{\r\n    let response = await post('/customer',params)\r\n    return response.data.data\r\n\r\n    // return post('/customer',params).then((response:any)=>{\r\n    //    return response.data.data\r\n    // }).catch(e=>{\r\n    //     return Promise.reject(e)\r\n    // })\r\n}","<template>\n  <div class=\"content\">\n    <el-table :data=\"tableDataSearched\" style=\"width: 50%\">\n      <el-table-column label=\"Date\" prop=\"date\" />filter\n      <el-table-column label=\"Name\" prop=\"name\" />\n      <el-table-column label=\"Address\" prop=\"address\" />\n      <el-table-column align=\"right\">\n        <template #header>\n          <el-input v-model=\"search\" size=\"mini\" placeholder=\"Type to search\" />\n        </template>\n        <template #default=\"scope\">\n          <el-button size=\"mini\" @click=\"handleEdit(scope.$index, scope.row)\"\n            >Edit</el-button\n          >\n          <el-popconfirm\n            title=\"Are you sure to delete this?\"\n            @confirm=\"handleDelete(scope.$index, scope.row)\"\n          >\n            <template #reference>\n              <el-button size=\"mini\" type=\"danger\">Delete</el-button>\n            </template>\n          </el-popconfirm>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <el-dialog v-model=\"dialogVisible\" title=\"Edit\">\n      <el-form ref=\"form\" :model=\"form\" label-width=\"120px\">\n        <el-form-item label=\"Name\">\n          <el-input v-model=\"form.name\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Address\">\n          <el-input v-model=\"form.address\"></el-input>\n        </el-form-item>\n      </el-form>\n      <el-button size=\"mini\" type=\"success\" @click=\"save\">Save</el-button>\n      <el-button size=\"mini\" type=\"danger\" @click=\"dialogVisible = false\"\n        >Cancel</el-button\n      >\n    </el-dialog>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport { Customer, postCustomer } from \"@/request/api/customer\";\nimport { ElMessage } from \"element-plus\";\n\nexport default defineComponent({\n  name: \"Ui\",\n  computed: {\n    tableDataSearched(): Customer[] {\n      return this.tableData.filter(\n        (data: Customer) =>\n          !this.search ||\n          data.name.toLowerCase().includes(this.search.toLowerCase())\n      );\n    },\n  },\n  data() {\n    return {\n      tableData: [\n        {\n          id: \"1\",\n          date: \"2016-05-03\",\n          name: \"Tom\",\n          address: \"No. 158, Grove St, Los Angeles\",\n        },\n        {\n          id: \"2\",\n          date: \"2015-05-03\",\n          name: \"Jack\",\n          address: \"No. 159, Grove St, Los Angeles\",\n        },\n        {\n          id: \"3\",\n          date: \"2014-05-03\",\n          name: \"Rose\",\n          address: \"No. 119, Grove St, Los Angeles\",\n        },\n      ] as Customer[],\n      search: \"\",\n      dialogVisible: false,\n      form: {} as Customer,\n    };\n  },\n  methods: {\n    handleEdit(index: number, row: Customer) {\n      // this.form = row 这种方式错误 拷贝引用了 这里手动赋值\n      this.form.id = row.id;\n      this.form.name = row.name;\n      this.form.address = row.address;\n      this.form.date = row.date;\n      this.dialogVisible = true;\n    },\n    handleDelete(index: number, row: Customer) {\n      this.tableData = this.tableData.filter(\n        (item: Customer) => item.id != row.id\n      );\n      //this.tableData.splice(index, 1);\n    },\n    save() {\n      postCustomer(this.form)\n        .then((entity) => {\n          console.log(entity);\n          let index = this.tableData.findIndex((d) => {\n            return d.id == entity.id;\n          });\n          this.tableData[index] = entity;\n          this.dialogVisible = false;\n        })\n        .catch((e) => {\n          ElMessage.error(e.message);\n        });\n    },\n  },\n});\n</script>\n\n<style scoped>\n.content {\n  width: 100%;\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap;\n}\n</style>\n","<script setup lang=\"ts\">\r\n// This starter template is using Vue 3 <script setup> SFCs\r\n// Check out https://v3.vuejs.org/api/sfc-script-setup.html#sfc-script-setup\r\nimport { ref } from 'vue'\r\n\r\ninterface ColorDat {\r\n    date: string\r\n    notes?: string\r\n}\r\nconst calendarDate = ref(new Date())\r\nconst nowYear = new Date().getFullYear()\r\nconst nowMonth = (new Date().getMonth() + 1).toString().padStart(2, '0')\r\nconst colorDays: ColorDat[] = [\r\n    { date: `${nowYear}-${nowMonth}-02`, notes: '《天下足球》' },\r\n    { date: `${nowYear}-${nowMonth}-18`, notes: '《篮球公园》' },\r\n    { date: `${nowYear}-${nowMonth}-25`, notes: '《体坛画报》' }\r\n]\r\nconsole.log(colorDays)\r\n\r\n</script>\r\n\r\n<template>\r\n    <div class=\"content\">\r\n        <el-calendar v-model=\"calendarDate\" class=\"w-b50\">\r\n            <template #dateCell=\"{ data }\">\r\n                <el-popover\r\n                    v-if=\"colorDays.find(item => item.date == data.day)\"\r\n                    placement=\"top-start\"\r\n                    title=\"备注\"\r\n                    :width=\"200\"\r\n                    trigger=\"hover\"\r\n                    :content=\"colorDays.find(item => item.date == data.day)?.notes || 'default'\"\r\n                >\r\n                    <template #reference>\r\n                        <p :class=\"data.isSelected ? 'is-selected' : ''\">\r\n                            {{ data.day.split('-')[2] }}\r\n                            {{ '⭐' }}\r\n                        </p>\r\n                    </template>\r\n                </el-popover>\r\n                <p v-else>{{ data.day.split('-')[2] }}</p>\r\n            </template>\r\n        </el-calendar>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n\r\nimport { defineComponent } from 'vue'\r\n\r\nexport default defineComponent({\r\n    // 已启用类型推断\r\n    name: \"About\",\r\n    computed: {\r\n\r\n    },\r\n    data() {\r\n        return {\r\n\r\n        }\r\n    },\r\n\r\n\r\n})\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.content {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n}\r\n</style>\r\n","import * as echarts from 'echarts/core';\r\nimport {\r\n  BarChart,\r\n  // 系列类型的定义后缀都为 SeriesOption\r\n  BarSeriesOption,\r\n  LineChart,\r\n  PieChart,\r\n  LineSeriesOption\r\n} from 'echarts/charts';\r\nimport {\r\n  TitleComponent,\r\n  // 组件类型的定义后缀都为 ComponentOption\r\n  TitleComponentOption,\r\n  TooltipComponent,\r\n  TooltipComponentOption,\r\n  GridComponent,\r\n  GridComponentOption,\r\n  // 数据集组件\r\n  DatasetComponent,\r\n  DatasetComponentOption,\r\n  // 内置数据转换器组件 (filter, sort)\r\n  TransformComponent,\r\n  LegendComponent\r\n} from 'echarts/components';\r\nimport { LabelLayout, UniversalTransition } from 'echarts/features';\r\nimport { CanvasRenderer } from 'echarts/renderers';\r\n\r\n// 通过 ComposeOption 来组合出一个只有必须组件和图表的 Option 类型\r\ntype ECOption = echarts.ComposeOption<\r\n  | BarSeriesOption\r\n  | LineSeriesOption\r\n  | TitleComponentOption\r\n  | TooltipComponentOption\r\n  | GridComponentOption\r\n  | DatasetComponentOption\r\n>;\r\n\r\n// 注册必须的组件\r\necharts.use([\r\n  TitleComponent,\r\n  TooltipComponent,\r\n  GridComponent,\r\n  DatasetComponent,\r\n  TransformComponent,\r\n  BarChart,\r\n  LineChart,\r\n  PieChart,\r\n  LabelLayout,\r\n  UniversalTransition,\r\n  CanvasRenderer,\r\n  LegendComponent\r\n]);\r\n\r\n\r\nexport default echarts","<script setup lang=\"ts\">\r\n// This starter template is using Vue 3 <script setup> SFCs\r\n// Check out https://v3.vuejs.org/api/sfc-script-setup.html#sfc-script-setup\r\nimport echarts from '../echarts'\r\nimport { onMounted } from 'vue'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nonMounted(() => {\r\n    const container1 = document.getElementById('chart-container1')\r\n    if (container1) {\r\n        var myChart1 = echarts.init(container1);\r\n        myChart1.on('click', (params) => {\r\n            ElMessage({ type: 'success', message: `click data ->${ '{'+params.name+':'+params.data +'}' } ` })\r\n        })\r\n        myChart1.setOption({\r\n            title: {\r\n                text: 'ECharts 入门示例 1',\r\n                subtext: '条形图',\r\n                left: 'center'\r\n            },\r\n            tooltip: {},\r\n            xAxis: {\r\n                data: ['衬衫', '羊毛衫', '雪纺衫', '裤子', '高跟鞋', '袜子']\r\n            },\r\n            yAxis: {},\r\n            series: [\r\n                {\r\n                    name: '销量',\r\n                    type: 'bar',\r\n                    data: [5, 20, 36, 10, 10, 20]\r\n                }\r\n            ]\r\n        });\r\n    }\r\n\r\n    const container2 = document.getElementById('chart-container2')\r\n\r\n    if (container2) {\r\n        var myChart2 = echarts.init(container2);\r\n        myChart2.on('click', (params) => {\r\n            ElMessage({ type: 'success', message: `click data ->${JSON.stringify(params.data)}` })\r\n        })\r\n        myChart2.setOption({\r\n            title: {\r\n                text: 'ECharts 入门示例 2',\r\n                subtext: '饼图',\r\n                left: 'center'\r\n            },\r\n            tooltip: {\r\n                trigger: 'item'\r\n            },\r\n            legend: {\r\n                orient: 'vertical',\r\n                left: 'left'\r\n            },\r\n            series: [\r\n                {\r\n                    name: 'Access From',\r\n                    type: 'pie',\r\n                    radius: '50%',\r\n                    data: [\r\n                        { value: 1048, name: 'Search Engine' },\r\n                        { value: 735, name: 'Direct' },\r\n                        { value: 580, name: 'Email' },\r\n                        { value: 484, name: 'Union Ads' },\r\n                        { value: 300, name: 'Video Ads' }\r\n                    ],\r\n                    emphasis: {\r\n                        itemStyle: {\r\n                            shadowBlur: 10,\r\n                            shadowOffsetX: 0,\r\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n    }\r\n\r\n})\r\n\r\n\r\n</script>\r\n\r\n<template>\r\n    <div class=\"content\">\r\n        <div id=\"chart-container1\" style=\"width:500px;height: 300px;\"></div>\r\n\r\n        <div id=\"chart-container2\" style=\"width:500px;height: 300px;\"></div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n\r\nimport { defineComponent } from 'vue'\r\n\r\nexport default defineComponent({\r\n    // 已启用类型推断\r\n    name: \"Chart\",\r\n    computed: {\r\n\r\n    },\r\n    data() {\r\n        return {\r\n\r\n        }\r\n    },\r\n\r\n\r\n})\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.content {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n}\r\n</style>\r\n","<script setup lang=\"ts\">\n// This starter template is using Vue 3 <script setup> SFCs\n// Check out https://v3.vuejs.org/api/sfc-script-setup.html#sfc-script-setup\n\nimport { Ref, ref, watch,defineProps,withDefaults,getCurrentInstance } from 'vue'\nimport { ElMessage } from 'element-plus'\n\n// 在setup中不能使用this,可以用getCurrentInstance获取实例,但是请不要把它当作在组合式 API 中获取 this 的替代方案来使用（这是官方警告的）\nconst instance = getCurrentInstance()\n\nfunction targetClick(target:string,event: Event ){\n  console.log(event)\n  ElMessage({ type: 'success', message: `click target ->${ target } ` })\n  console.log(instance?.isMounted)\n  \n}\n\n\n\nconst dialogShow = ref(false)\n\n\n</script>\n\n\n<template>\n  <div class=\"content\">\n\n    <div class=\"bottomDiv bottomDiv1\" @click=\"targetClick('bottomDiv1',$event)\">\n      <h5 class=\"title\">\n        未防止穿透\n      </h5>\n      <button class=\"btn1\"  @click=\"targetClick('btn1',$event)\">\n        点我\n      </button>\n    </div>\n\n\n    <div class=\"bottomDiv bottomDiv2\" @click=\"targetClick('bottomDiv2',$event)\">\n      <h5 class=\"title\">\n        已防止穿透\n      </h5>\n      <button class=\"btn2\"  @click.stop=\"targetClick('btn2',$event)\">\n        点我\n      </button>\n    </div>\n\n\n   <div class=\"bottomDiv bottomDiv3\" >\n     <h5 class=\"title\">\n        蒙版作用\n      </h5>\n      <button class=\"btn3\"  @click.stop=\"dialogShow=true\">\n        点我\n      </button>\n    </div>\n    \n    <div class=\"dialog\" v-show=\"dialogShow\" @click.stop=\"dialogShow=false\">\n      外层是蒙版，点击蒙版来隐藏弹出层\n      <div class=\"dialogContent\" @click.stop=\"targetClick('dialogContent',$event)\">\n        内层是内容,点击内层不会导致弹出隐藏。原理是利用禁用点击穿透。\n      </div>\n    </div>\n\n    \n  </div>\n</template>\n\n<script lang=\"ts\">\n\nimport { defineComponent, computed } from 'vue'\n\nexport default defineComponent({\n  // 已启用类型推断\n  name: \"Click\",\n  computed: {\n    // 需要注解\n    msg(): string {\n     return 'tt'\n    },\n  },\n  data() {\n    return {\n\n    }\n  },\n\n})\n\n\n\n\n\n</script>\n\n<style scoped>\n.content {\n  width: 100%;\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap;\n}\n.bottomDiv{\n width: 100Px;\n height: 100px;\n background-color: mediumseagreen;\n}\n\n.title{\n  color: #fff;\n}\n\n.dialog{\n  z-index: 200;\n  position: fixed;\n  height: 100vh;\n  width: 100vw;\n  background-color: rgba(28, 34, 20, 0.144);\n\n}\n\n.dialogContent{\n  width: 50%;\n  height: 300px;\n  background: #fff;\n  position: relative;\n  margin-top: 20vh;\n  margin-left: 50vh;\n  border: 10px solid #ffffff;\n  border-radius: 10px;\n}\n\n</style>\n","\r\nimport { ref,Ref, onMounted, watch } from 'vue'\r\nimport { getResposity,Resposity } from '../../request/api/resposity';\r\n\r\n\r\nexport default function resposityLoad(query:Ref<String>) {\r\n  const repositories:Ref<Resposity[]> = ref([])\r\n  const getUserRepositories = async () => {\r\n    repositories.value = await getResposity({key:query.value})\r\n  }\r\n  onMounted(getUserRepositories)\r\n  watch(query, getUserRepositories)\r\n  return {\r\n    repositories,\r\n    getUserRepositories\r\n  }\r\n}","<script setup lang=\"ts\">\r\n// This starter template is using Vue 3 <script setup> SFCs\r\n// Check out https://v3.vuejs.org/api/sfc-script-setup.html#sfc-script-setup\r\nimport {ref} from 'vue'\r\n\r\nimport resposityLoad from './resposity-load'\r\n\r\nconst query = ref('')\r\nconst { repositories, getUserRepositories } = resposityLoad(query)\r\n\r\n</script>\r\n\r\n\r\n<template>\r\n  <div class=\"content\">\r\n\r\n\r\n      <div class=\"content\">\r\n        <el-card :header=\"msg\" class=\"box-card\">\r\n        <template #header>\r\n            \r\n            <div class=\"card-header\">\r\n\r\n                <el-row :gutter=\"10\">\r\n                    <el-col :span=\"20\"><el-input v-model=\"query\"  placeholder=\"输入姓氏\" maxlength=\"1\" /></el-col>\r\n                    <el-col :span=\"4\"><el-button class=\"button\" type=\"text\" @click=\"getUserRepositories\">随机</el-button></el-col>\r\n                </el-row>\r\n                \r\n                \r\n            </div>\r\n        </template>\r\n        <div\r\n            v-for=\"(item,o) in repositories\"\r\n            :key=\"o\"\r\n            class=\"text item\"\r\n        >{{ '姓名 :' + item.goods + '      评分 :' + item.count }}</div>\r\n        </el-card>\r\n    </div>\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n\r\nimport { defineComponent, computed } from 'vue'\r\n\r\nexport default defineComponent({\r\n  // 已启用类型推断\r\n  name: \"Composition\",\r\n  computed: {\r\n    // 需要注解\r\n    msg(): string {\r\n     return 'tt'\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n\r\n    }\r\n  },\r\n\r\n})\r\n\r\n\r\n\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.content {\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n</style>\r\n","import {createRouter, createWebHashHistory, createWebHistory, RouteRecordRaw} from 'vue-router'\r\nimport Doc from  './components/Doc.vue'\r\nimport Ui  from \"./components/Ui.vue\";\r\nimport About from \"./components/About.vue\"\r\nimport Chart from \"./components/Chart.vue\"\r\nimport Click from \"./components/Click.vue\"\r\nimport Composition from \"./components/composition/Index.vue\"\r\n\r\n// 1. 定义路由组件.\r\n// 也可以从其他文件导入\r\nconst Home = { template: '<h1>Hello !</h1>' }\r\n\r\n\r\n// 2. 定义一些路由\r\n// 每个路由都需要映射到一个组件。\r\n// 我们后面再讨论嵌套路由。\r\nconst routes : RouteRecordRaw[] = [\r\n    { path: '/', component: Home },\r\n    { path: '/about', component: About },\r\n    { path: '/doc', component: Doc },\r\n    { path: '/ui', component: Ui },\r\n    { path: '/chart', component: Chart },\r\n    { path: '/click', component: Click },\r\n    { path: '/composition', component: Composition },\r\n]\r\n\r\n// 3. 创建路由实例并传递 `routes` 配置\r\n// 你可以在这里输入更多的配置，但我们在这里\r\n// 暂时保持简单\r\nexport let router = createRouter({\r\n    // 4. 内部提供了 history 模式的实现。为了简单起见，我们在这里使用 hash 模式。\r\n    history: createWebHistory(import.meta.env.BASE_URL),\r\n    routes, // `routes: routes` 的缩写\r\n})\r\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport { router } from './router'\nimport 'element-plus/dist/index.css'\n\n\nconst app = createApp(App)\napp.use(router)\napp.mount('#app')\n"],"names":["echarts.use","TitleComponent","TooltipComponent","GridComponent","DatasetComponent","TransformComponent","BarChart","LineChart","PieChart","LabelLayout","UniversalTransition","CanvasRenderer","LegendComponent","App"],"mappings":"g7BAAA,KAAM,IAAI,UAAoB,CAC1B,KAAM,GAAU,SAAS,cAAc,QAAQ,QAC/C,GAAI,GAAW,EAAQ,UAAY,EAAQ,SAAS,iBAChD,OAEJ,SAAW,KAAQ,UAAS,iBAAiB,6BACzC,EAAe,GAEnB,GAAI,kBAAiB,AAAC,GAAc,CAChC,SAAW,KAAY,GACnB,GAAI,EAAS,OAAS,YAGtB,SAAW,KAAQ,GAAS,WACxB,AAAI,EAAK,UAAY,QAAU,EAAK,MAAQ,iBACxC,EAAe,KAG5B,QAAQ,SAAU,CAAE,UAAW,GAAM,QAAS,KACjD,WAAsB,EAAQ,CAC1B,KAAM,GAAY,GAClB,MAAI,GAAO,WACP,GAAU,UAAY,EAAO,WAC7B,EAAO,gBACP,GAAU,eAAiB,EAAO,gBACtC,AAAI,EAAO,cAAgB,kBACvB,EAAU,YAAc,UACvB,AAAI,EAAO,cAAgB,YAC5B,EAAU,YAAc,OAExB,EAAU,YAAc,cACrB,EAEX,WAAwB,EAAM,CAC1B,GAAI,EAAK,GAEL,OACJ,EAAK,GAAK,GAEV,KAAM,GAAY,EAAa,GAC/B,MAAM,EAAK,KAAM,KAEvB,AAAoB,KC1CtB,OAAe,ysBC+Cf,2rBC9CA,GAAI,IAAM,OACV,KAAM,GAAU,GAAM,OAAO,CACzB,QAAS,GACT,QAAS,kBAGO,EAAa,EAA8B,OACpD,IAAI,SAAQ,CAAC,EAAS,IAAW,GAC5B,IAAI,EAAK,CAAE,WACd,KAAK,GACK,EAAQ,IAElB,MAAM,GACI,EAAO,kBAMT,EAAa,EAA8B,OACrD,IAAI,SAAQ,CAAC,EAAS,IAAW,GAC5B,KAAK,EAAK,GACb,KAAK,GACK,EAAQ,IAElB,MAAM,GACI,EAAO,uBClBM,EAAoC,OAC7D,IAAI,aAAa,GAAQ,KAAK,AAAC,GAC3B,EAAS,KAAK,MACtB,MAAM,GACE,ICZf,MAAe,CAAC,EAAK,IAAU,CAC7B,KAAM,GAAS,EAAI,WAAa,EAChC,SAAW,CAAC,EAAK,IAAQ,GACvB,EAAO,GAAO,EAEhB,MAAO,qxBCqET,wQChDoC,EAAmC,OAE5D,AADQ,MAAM,IAAK,YAAY,IACtB,KAAK,KCmBzB,02GCEA,oICZAA,GAAY,CACVC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,44CC8CF,0iDCxBA,iKCnEsC,EAAmB,MACjD,GAAgC,EAAI,IACpC,EAAsB,SAAY,GACzB,MAAQ,KAAM,GAAa,CAAC,IAAI,EAAM,kBAE3C,KACJ,EAAO,GACN,CACL,eACA,k2BCgCJ,2JCpCA,KAAM,IAAO,CAAE,SAAU,oBAMnB,GAA4B,CAC9B,CAAE,KAAM,IAAK,UAAW,IACxB,CAAE,KAAM,SAAU,UAAW,IAC7B,CAAE,KAAM,OAAQ,UAAW,IAC3B,CAAE,KAAM,MAAO,UAAW,IAC1B,CAAE,KAAM,SAAU,UAAW,IAC7B,CAAE,KAAM,SAAU,UAAW,IAC7B,CAAE,KAAM,eAAgB,UAAW,QAM5B,IAAS,GAAa,CAE7B,QAAS,GAAiB,wBAC1B,YC1BJ,KAAM,GAAM,GAAUC,IACtB,EAAI,IAAI,IACR,EAAI,MAAM"}